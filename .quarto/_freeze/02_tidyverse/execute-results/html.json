{
  "hash": "c3dbb9f8d72c01f8315d32ec474fe96d",
  "result": {
    "engine": "knitr",
    "markdown": "# Manipulación de tablas: tidyverse\n\n\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](tidyverse.png){fig-align='center' width=50%}\n:::\n:::\n\n\n\n\n\n\n\n\nTidyverse es una **colección** de paquetes de R diseñados para la ciencia de datos. Todos los paquetes comparten una filosofía de diseño, una gramática y estructuras de datos subyacentes.\n\n- Referencia principal: [R para la Ciencia de Datos.](https://es.r4ds.hadley.nz/)\n\n- También es posible consultar en la [página oficial de tidyverse](https://www.tidyverse.org/).\n\nPara instalar el paquete completo, se debe ejecutar:\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ninstall.packages(\"tidyverse\")\n\n```\n:::\n\n\n\n\n\n\n\n\nEl código anterior debe ejecutarse <font style=\"color:YellowGreen;\">solo una vez</font>. La instalación completa del paquete incluye, entre otras, las siguientes librerías:\n\n- <font style=\"color:YellowGreen;\">readr</font>: Importa datos de archivos (como CSV o TXT) de manera rápida y eficiente.\n\n- <font style=\"color:YellowGreen;\">dplyr</font>: Manipula y transforma datos con funciones intuitivas como filter, select, y mutate.\n\n- <font style=\"color:YellowGreen;\">ggplot2</font>: Crea visualizaciones de datos personalizadas y elegantes usando una gramática gráfica.\n\n- <font style=\"color:YellowGreen;\">tibble</font>: Proporciona una versión moderna y mejorada de los data frames de R.\n\n- <font style=\"color:YellowGreen;\">tidyr</font>: Organiza y limpia datos, facilitando su transformación a formatos \"tidy\".\n\n- <font style=\"color:YellowGreen;\">purrr</font>: Trabaja con funciones y vectores de manera funcional y consistente.\n\n- <font style=\"color:YellowGreen;\">stringr</font>: Manipula y opera con cadenas de texto de forma sencilla.\n\n- <font style=\"color:YellowGreen;\">forcats</font>: Facilita el manejo de variables categóricas (factores) en R.\n\nPara poder utilizar las funciones que proveen estas librerías, es necesario ejecutar:\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(tidyverse)\n\n```\n:::\n\n\n\n\n\n\n\n\nEl llamado a la librería con la función **library()** debe realizarse <font style=\"color:YellowGreen;\">siempre</font>.\n\nEn esta clase, trabajaremos con el set de datos <font style=\"color:YellowGreen;\">crecimientoPlantas</font>. Debido a la gran cantidad de funciones provistas por las librerías de tidyverse, utilizaremos solo algunas de las más frecuentes.\n\n### Importar\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nlibrary(rio)\n\ndatos = file.choose() |> import()\n\n```\n:::\n\n\n\n\n\n\n\n\n**<font style=\"color:YellowGreen;\">Exploración</font>**\n\n\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n\ndim(datos)\nstr(datos)\ntable(datos$group)\nhead(datos)\nsummary(datos)\n\n```\n:::\n\n\n\n\n\n\n\n\n\n### Añadir/modificar columnas\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\nlibrary(tidyverse)\n\ndatos |>\n  mutate(id = row_number()) # Añade la columna 'id' con el número de filas\n\ndatos |>\n  mutate(\n    weight = round(weight, 1) # Modifica la columna 'weight'\n  )\n\n```\n:::\n\n\n\n\n\n\n\n\n::: callout-tip\n##### Tip\n\nUna de las mayores contribuciones del paquete *tidyverse*, específicamente la librería **\\{magrittr\\}**, fue la implementación del operador *pipe* para concatenar funciones, que se escribe **<font style=\"color:YellowGreen;\">%>%</font>**. Se extendió tanto su empleo, que a partir de la versión 4.1.0 de **R** se lo incorporó dentro de los operadores de base en R, con la forma |>.\n\n:::\n\n### Renombrar columnas\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\ndatos |>\n  rename(\n    peso = weight,\n    grupo = group\n  )\n\n# O bien\n\ndatos |>\n  rename_with(\n    ~ c(\"peso\", \"grupo\")\n  )\n\n```\n:::\n\n\n\n\n\n\n\n\nPuede ser conveniente crear una nueva tabla con los nuevos nombres de columnas:\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\ndatos.2 = datos |>\n  rename(\n    peso = weight,\n    grupo = group\n  )\n\n```\n:::\n\n\n\n\n\n\n\n\n\n### Medidas de resumen agrupadas\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\ndatos.2 |>\n  group_by(grupo) |>\n  summarise(promedio = mean(peso))\n\ndatos.2 |>\n  group_by(grupo) |>\n  summarise(\n    promedio = mean(peso),\n    minimo = min(peso),\n    maximo = max(peso)\n  )\n\ndatos.2 |>\n  group_by(grupo) |>\n  count()\n\n```\n:::\n\n\n\n\n\n\n\n\n### Combinación de funciones\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\ndatos.2 |>\n  mutate(\n    mayor = ifelse(\n      peso > mean(peso),\n      TRUE,\n      FALSE\n    )\n  ) |>\n  group_by(mayor) |>\n  summarise(promedio = mean(peso))\n\n```\n:::\n\n\n\n\n\n\n\n\n### Ordenar\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\ndatos.2 |>\n  arrange(grupo, peso)\n\ndatos.2 |>\n  group_by(grupo) |>\n  summarise(media = mean(peso)) |>\n  arrange(media)\n\ndatos.2 |>\n  group_by(grupo) |>\n  summarise(media = mean(peso)) |>\n  arrange(- media)\n\n```\n:::\n\n\n\n\n\n\n\n\n\n### Selección de columnas\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\ndatos.2 |>\n  select(peso) # Selección por nombre de columna\n\ndatos.2 |>\n  select(1) # Selección por índice de columna\n\n```\n:::\n\n\n\n\n\n\n\n\n\n### Selección de filas/filtros\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\ndatos.2 |>\n  filter(grupo == \"ctrl\")\n\ndatos.2 |>\n  filter(grupo != \"ctrl\")\n\ndatos.2 |>\n  filter(peso > 6)\n\ndatos.2 |>\n  filter(peso > mean(peso))\n\ndatos.2 |>\n  slice(1)\n\ndatos.2 |>\n  slice(4:10)\n\ndatos.2 |>\n  group_by(grupo) |>\n  slice(1)\n\ndatos.2 |>\n  group_by(grupo) |>\n  slice_max(peso)\n\ndatos.2 |>\n  group_by(grupo) |>\n  slice_max(peso, n = 2)\n\ndatos.2 |>\n  group_by(grupo) |>\n  slice_sample(n = 5)\n\ndatos.2 |>\n  group_by(grupo) |>\n  slice_tail(n = 5)\n\ndatos.2 |>\n  group_by(grupo) |>\n  slice_head(n = 5)\n\ndatos.2 |>\n  group_by(grupo) |>\n  slice_tail(n = 5)\n\n```\n:::\n\n\n\n\n\n\n\n\n\n### Tablas horizontales y verticales\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\ndv = datos.2 |>\n  group_by(grupo) |>\n  summarise(media = mean(peso))\ndv\n\ndh = dv |>\n  pivot_wider(\n    names_from = grupo,\n    values_from = media\n  )\ndh\n\ndv2 = dh |>\n  pivot_longer(\n    cols = 1:3,\n    names_to = \"grupo\",\n    values_to = \"peso\"\n  )\ndv2\n\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}